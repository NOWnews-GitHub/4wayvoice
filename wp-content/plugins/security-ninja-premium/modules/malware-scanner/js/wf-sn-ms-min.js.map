{"version":3,"sources":["wf-sn-ms.js"],"names":["updateTimeCounter","totalSeconds","mssecondsLabel","innerHTML","pad","msminutesLabel","parseInt","val","valString","length","document","getElementById","actions","msg1","msg2","action","ShieldAgainstThirdPartyErrors","$","jQuery","on","e","preventDefault","html","setInterval","startingpoint","Deferred","resolve","hide","each","i","append","sn_block_ui","pipe","removeClass","addClass","params","ajax","type","url","ajaxurl","data","what","_ajax_nonce","wf_sn_ms_nonce","dataType","success","response","alert","replace","cnt","sn_unblock_ui","show","window","location","reload","error","content","this","parents","find","toggleClass","slideToggle","confirm","post","slideUp","hash","filename","button","onerror","msg","lineNo","columnNo","console","ready"],"mappings":"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","sourcesContent":["/* globals jQuery:true, ajaxurl:true, wf_sn_ms_nonce:true, sn_block_ui:true, sn_unblock_ui:true */\r\n/*\r\n * Security Ninja - Malware Scanner add-on\r\n * (c) 2015. Web factory Ltd\r\n */\r\n\r\n// FOR THE SECOND COUNTER ON THE OVERLAY\r\nfunction updateTimeCounter() {\r\n  ++totalSeconds;\r\n  mssecondsLabel.innerHTML = pad(totalSeconds % 60);\r\n  msminutesLabel.innerHTML = pad(parseInt(totalSeconds / 60));\r\n}\r\n\r\nfunction pad(val) {\r\n  var valString = val + \"\";\r\n  if (valString.length < 2) {\r\n    return \"0\" + valString;\r\n  } else {\r\n    return valString;\r\n  }\r\n}\r\n\r\nvar msminutesLabel = document.getElementById(\"mscounterminutes\");\r\nvar mssecondsLabel = document.getElementById(\"mscounterseconds\");\r\nvar totalSeconds = 0;\r\n\r\n\r\nvar actions = [\r\n{msg1: 'Cleaning cache ... ', msg2: ' DONE!', action: 'clean_cache'},\r\n{msg1: 'Checking malware definitions', msg2: 'DONE!', action: 'update_samples'},\r\n\r\n{msg1: 'Checking plugins for modifications', msg2: 'DONE!', action: 'do_integrity_scan'},\r\n\r\n  //{msg1: 'Generating list of wp_options table rows ... ', msg2: 'DONE! Found %d rows.', action: 'get_db_rows'},\r\n  //{msg1: 'Scanning wp_options table ... ', msg2: 'DONE! Found %d suspicious rows.', action: 'scan_db'},\r\n  {msg1: 'Scanning website for malicious code', msg2: 'DONE!', action: 'do_mal_scan'},\r\n  {msg1: 'Generating results ... ', msg2: 'DONE!', action: 'get_results'}\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function ShieldAgainstThirdPartyErrors($) {\r\n    // Code you want protect here...\r\n\r\n\r\n\r\n  // handle each individual ajax call\r\n  function do_sn_ms_request(params) {\r\n\r\n    return jQuery.ajax({ type: 'POST',\r\n      url: ajaxurl,\r\n      data: {\r\n        action: 'sn_ms_run_scan',\r\n        what: params.action,\r\n        _ajax_nonce: wf_sn_ms_nonce\r\n      },\r\n      dataType: 'json',\r\n      success: function(response) {\r\n\r\n\r\n  if ( response !== null ) {\r\n\r\n        if ( response.success !== null ) {\r\n          // no response\r\n        }\r\n        else {\r\n          alert('Invalid option. Please reload');\r\n          return;\r\n\r\n        }\r\n\r\n\r\n        jQuery('#msg_' + params.action).removeClass('pending').removeClass('current').addClass('passed');\r\n\r\n        jQuery('.badge', '#msg_' + params.action).html(params.msg2.replace('%d', parseInt(response.data.cnt, 10)));\r\n\r\n        if (params.action == 'scan_db') {\r\n          // scan_db IS BEFORE do_mal_scan\r\n          // LARS - using timer instead of updates from database\r\n          //update_scan_status(); // start the update\r\n        }\r\n\r\n        if (params.action == 'get_results') {\r\n            // stops the update timer\r\n          //  clearTimeout(regularupdate);\r\n          jQuery('#sn_ms_results').append(response.data);\r\n          sn_unblock_ui('#sn-malware-scanner');\r\n          jQuery('.loader').show();\r\n          window.location.reload();\r\n        }\r\n      }\r\n      }, // success\r\n      error: function(){\r\n        // clearTimeout(regularupdate);\r\n        alert('An undocumented error has occured. Please reload the page and try again.');\r\n\r\n      } // error\r\n    });\r\n  } // do_sn_ms_request\r\n\r\n\r\n\r\n  // run test\r\n  jQuery('#sn_ms_run_scan').on('click', function(e) {\r\n    e.preventDefault();\r\n\r\n    jQuery('#scanstatus').html();\r\n\r\n    setInterval(updateTimeCounter, 1000);\r\n\r\n   //  var running_scan = true;\r\n\r\n   let startingpoint = jQuery.Deferred();\r\n   startingpoint.resolve();\r\n\r\n   jQuery('#sn_ms_results').html('');\r\n   jQuery('ul.malware-scan-list').html('');\r\n   jQuery('.wrap .error').hide();\r\n\r\n   jQuery.each(actions, function(i, action) {\r\n\r\n    jQuery('ul.malware-scan-list').append('<li id=\"msg_' + action.action +'\" class=\"pending\">' + action.msg1 + ' <span class=\"badge\">Waiting ...</span></li>');\r\n/*\r\n      if (action.action=='do_mal_scan') {\r\n        jQuery('#msg_do_mal_scan').append('<div id=\"scanstatus\"><ul><li>Files scanned <span id=\"files_scanned\"></span></li><li>Directories scanned <span id=\"directories\"></span></li><li>Last directory <span id=\"last_processed_dir\"></span></li></ul></div>');\r\n      }\r\n      */\r\n    });\r\n   jQuery('.loader').hide();\r\n\r\n   sn_block_ui('#sn-malware-scanner');\r\n\r\n   jQuery.each(actions, function(i, action) {\r\n\r\n    startingpoint = startingpoint.pipe( function() {\r\n      jQuery('#msg_' + action.action).removeClass('pending').addClass('current');\r\n      jQuery('.badge', '#msg_' + action.action).html('Working ...');\r\n      return do_sn_ms_request(action);\r\n    });\r\n      }); // each action\r\n\r\n   jQuery('.wf-sn-ms-not-run').hide();\r\n    //  running_scan = false;\r\n\r\n}); // run tests\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  $('#sn_ms_results').on('click', '.sn-malware-title', function(e){\r\n    e.preventDefault();\r\n\r\n    let content = $(this).parents('.sn-malware-filebox').find('.sn-malware-file-code');\r\n    $(this).toggleClass('opened');\r\n    $(content).slideToggle(500);\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // reset files whitelist\r\n  $('#sn-ms-reset-whitelist').on('click', function(e){\r\n    e.preventDefault();\r\n\r\n    if (!confirm('Are you sure you want to reset the whitelisted files list?\\nPlease rescan files after cleaning the whitelist.')) {\r\n      return;\r\n    }\r\n    $.post(ajaxurl, {\r\n      _ajax_nonce: wf_sn_ms_nonce,\r\n      action: 'sn_ms_reset_whitelist'\r\n    },\r\n    function() {\r\n      window.location.reload();\r\n    });\r\n  }); // reset files whitelist\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // whitelist file\r\n  $('#sn_ms_results').on('click', 'button.sn_ms_whitelist', function(e){\r\n    e.preventDefault();\r\n\r\n    let tmp = confirm('Are you sure you want to whitelist this file?');\r\n    if (!tmp) {\r\n      return;\r\n    }\r\n\r\n    $(this).parents('.sn-malware-filebox').slideUp(500);\r\n\r\n    $.post(ajaxurl,{\r\n      action: 'sn_ms_whitelist_file',\r\n      hash: $(this).data('hash'),\r\n      filename: $(this).data('filename'),\r\n      _ajax_nonce: wf_sn_ms_nonce\r\n    },\r\n    function(){\r\n    },\r\n    'json'\r\n    );\r\n  }); // whitelist files\r\n\r\n\r\n\r\n\r\n\r\n  // delete file\r\n  $('#sn_ms_results').on('click', 'button.sn_ms_delete', function(e){\r\n    e.preventDefault();\r\n\r\n    let tmp = confirm('Are you sure you want to delete this file?\\n\\n There is NO undo!\\n\\nThis can break functionality or your site from functioning. Use only if you know what you are doing :-)' + $(this).data('filename'));\r\n    if (!tmp) {\r\n      return;\r\n    }\r\n\r\n    let button = this;\r\n\r\n    $.post(ajaxurl,\r\n     {action: 'sn_ms_delete_file', filename: $(this).data('filename'), hash: $(this).data('hash'), _ajax_nonce: wf_sn_ms_nonce},\r\n     function(response){\r\n       if (typeof response.success == 'undefined') {\r\n         alert('Undocumented error. File was not deleted. Please reload the page.');\r\n       } else if (response.success == true) {\r\n         alert('File deleted!');\r\n         $(button).parents('.sn-malware-filebox').slideUp(500);\r\n       } else {\r\n         alert('Your file access properties do not allow us to delete the file (this is not a bad thing). Please delete it manually, via FTP.');\r\n       }\r\n     },\r\n     'json'\r\n     );\r\n  }); // Delete a file\r\n\r\n\r\n\r\n\r\n} // ShieldAgainstThirdPartyErrors()\r\n\r\n\r\n\r\n\r\n// First shot.\r\n// If no error happened, when DOMContentLoaded is triggered, this code is executed.\r\njQuery(ShieldAgainstThirdPartyErrors);\r\n\r\n// Backup shot.\r\n// If third party script throw or provoke an unhandled exception, the above function\r\n// call could never be executed, so, lets catch the exception and execute the code.\r\n\r\nwindow.onerror = function (msg, url, lineNo, columnNo, error) {\r\n  console.error('Error detected: \"'+error+'\" File:'+url+' Line:'+lineNo+' Column:'+columnNo);\r\n//  console.log('Above error was blocking');\r\nShieldAgainstThirdPartyErrors(jQuery);\r\nreturn true;\r\n}\r\n\r\n\r\n\r\njQuery(document).ready(function(){\r\n  // toggle file info details\r\n\r\n//jQuery(ShieldAgainstThirdPartyErrors);\r\n\r\n\r\n\r\n\r\n// * Updates the scan results\r\n// DEACTIVATED FOR NOW - Using minute:second counter instead\r\n/*\r\nfunction update_scan_status(){\r\n  return $.ajax({\r\n    type: 'POST',\r\n    url: ajaxurl,\r\n    data: {\r\n      action: 'sn_ms_get_scan_status',\r\n      _ajax_nonce: wf_sn_ms_nonce\r\n    },\r\n    dataType: 'json',\r\n    success: function(response) {\r\n\r\n      if (typeof response.data.files_scanned !== 'undefined') {\r\n        jQuery('#scanstatus').slideDown();\r\n        jQuery('#scanstatus #directories').html(response.data.directories);\r\n        jQuery('#scanstatus #files_scanned').html(response.data.files_scanned);\r\n        jQuery('#scanstatus #last_processed_dir').html(response.data.last_processed_dir);\r\n      }\r\n      regularupdate = setTimeout(function(){\r\n        update_scan_status();\r\n      }, 3000);\r\n\r\n      }, // success\r\n      error: function(response){\r\n        alert('An undocumented error has occured. Please reload the page and try again.');\r\n      } // error\r\n    });\r\n  }\r\n  */\r\n\r\n\r\n\r\n\r\n}); // document.ready"]}